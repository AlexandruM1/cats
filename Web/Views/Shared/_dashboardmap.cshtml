@using Cats.Services.Security
@using LanguageHelpers.Localization
@{
    var user = (UserIdentity)HttpContext.Current.User.Identity;
    
    }
<style>
    .map
    {
        width:700px;
        height:500px;
        border-right:solid 1px #DDD;
    }

</style>
<link rel="stylesheet" href="~/Content/MapResources/openlayers/theme/default/style.css" type="text/css">
<script src="~/Content/MapResources/OpenlayersWrapper.js"></script>
<script src="~/Content/MapResources/openlayers/lib/OpenLayers.js"></script>
<script src="~/Content/MapResources/MapStyle.js"></script>
<script src="~/Content/MapResources/MapLegend.js"></script>


<div id="map1" class="map">
</div>
<div id="divLegend">Legend</div>
<div id="map2" class="map2">
</div>
<script>
        
    function mapController($http, $scope, $timeout) {
        $scope.countryShapeURL = "/Content/MapResources/MapData/ethiopiaJson.js";
        $scope.regionShapeURL = "/Content/MapResources/MapData/ethiopiaRegions.js";
        $scope.getData = function () {

        }
    }
    var countryShapeURL = "/Content/MapResources/MapData/ethiopiaJson.js";
    var regionShapeURL = "/Content/MapResources/MapData/ethiopiaRegions.txt";
    $(function () {
        ShowLegend();
        var hrdSummary = {};
        var HRDUrl= "@Url.Action("HRDDetail_Read", "HRD", new { Area = "EarlyWarning" })";

        function aggregateRegionBeneficiaries(data) {
            var regionBen = {};
            for (var i in data) {
                var regionID = data[i].RegionID;

                if (!regionBen["row" + regionID]) {
                    regionBen["row" + regionID] = { RegionID: regionID, RegionName: data[i].Region, NumberOfBeneficiaries: 0 };
                }
                regionBen["row" + regionID].NumberOfBeneficiaries += data[i].NumberOfBeneficiaries / 1;
                
            }
            return regionBen;
        }
        $.post(HRDUrl, {}, function (data) {
            drawRegionBenficiaryMap(data.Data);
        });

        function drawRegionBenficiaryMap(data) {
            var regionBen = aggregateRegionBeneficiaries(data);

            var dataTable = regionBen;
            var key = "RegionID";
            var indicator = "NumberOfBeneficiaries";
            
            console.log("drawRegionBenficiaryMap", regionBen);
            var shadingOption = { minColor: "rgb(255,200,200)", maxColor: "rgb(255,100,100)", noValColor: "rgb(240,240,240)" };
            /*
            var mapLayer =
                [
                    { name: "Ethiopia", url: countryShapeURL, styleMap: stylePresets.outline }
                   ,{ name: "Regions", url: regionShapeURL, style: getPolygonShadingStyle(key, dataTable, indicator, shadingOption) }
                ];
            */
            var mapLayer =
                [
                    { name: "Regions", url: regionShapeURL, style: getPolygonShadingStyle(key, dataTable, indicator, shadingOption) }
                ];
            CreateMap("map1", { layers: mapLayer });
            
        }


    });
    
</script>
