@using Cats.Areas.Logistics.Models
@using Cats.Areas.Procurement.Models
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@model Cats.Models.ViewModels.TransportRequisitionWithTransporter


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section LeftBar{
    @Html.Partial("_TransportOrderLeftBar");
}

<h4 class="page-header">@ViewBag.TransportOrderTitle Transport Orders</h4>
@section Toolbar
{
    <a data-buttontype="btn_new_record"  class="btn toolbar-btn "  href="@Url.Action("TransportRequisitions","TransportOrder",new {Area="Procurement"})"></a>
}
<div>
@(Html.Kendo().Grid<TransportOrderViewModel>().Name("Grid").Columns(columns =>
      {
          columns.Bound(to => to.ContractNumber).Width(150).ClientTemplate("<a href='" + Url.Action("TransportContract", "TransportOrder", new { Area = "Procurement", id = "#=TransportOrderID#" }) + " '>#=ContractNumber#</a>  ").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;" });
    //columns.Bound(to => to.TransportOrderNo).ClientTemplate("<a href='" + Url.Action("Details", "TransportOrder", new { Area = "Procurement", id = "#=TransportOrderID#" }) + " '>#=TransportOrderNo#</a>  ").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;" });
    columns.Bound(to => to.Transporter);
    columns.Bound(to => to.BidDocumentNo).Width(100).Title(Translator.Translate("Bid Document #"));
    //columns.Bound(to => to.OrderDateET).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" });
    columns.Bound(to => to.OrderExpiryDateET).Width(120).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid", style = "overflow: visible; white-space: normal;" });
    columns.Bound(to => to.RequestedDispatchDateET).Width(120).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid", style = "overflow: visible; white-space: normal;" });
    columns.Bound(to => to.TransportOrderNo).Width(150);
    columns.Bound(to => to.Status);
     columns.Command(p =>
              
                  p.Custom("View Contract").Click("onGenerate")).Width(150);
                 
              

      })
    //.Editable(editable => editable.Mode(GridEditMode.PopUp))
     .Scrollable()
    //.Scrollable()
    //.HtmlAttributes(new { style = "height:230px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>model.Id(p => p.TransportOrderID))
        .Read(read => read.Action("TransportOrder_Read", "TransportOrder",new {id=ViewBag.TransportOrdrStatus}))
    )
      )
    </div>
<div>
    <hr/>
</div>
@Html.Partial("AssignTransporter",Model)
@*<h4 >Transport Requisition Without Winner Transporter </h4>
<div class="controls" align="center">
    @Html.DropDownList("TransporterID",String.Empty)
</div>
<div class="controls" align="right">
    <input type="submit" value="Assign Transporter" onclick="onAssign(e)" class="btn btn-success"/>
</div>

@(Html.Kendo().Grid<Cats.Areas.Procurement.Models.TransportRequisitionWithoutWinnerModel>()
      .Name("grid")
      .Columns(columns =>
          {
              columns.Bound(p => p.Select).
                  //ClientTemplate("<input type='checkbox'/>");
                  ClientTemplate("<input type='checkbox' #= Select ? checked='checked' : '' # ></input>");
              columns.Bound(p => p.Woreda);
              columns.Bound(p => p.Commodity);
              columns.Bound(p => p.FDP);
              columns.Bound(p => p.QuantityQtl).Title(Translator.Translate("Quantity")).HtmlAttributes(new { align = "Right" });
              // columns.Bound(p => p.Amount);
              //columns.Command(p => p.Custom("Assign Transporter").Click("onGenerate"));
          })
      .Pageable()
      .Sortable()
      .Filterable()
      .Selectable(m=>m.Mode(GridSelectionMode.Multiple	))
      .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Aggregates(aggregates =>aggregates.Add(p => p.QuantityQtl).Sum())
                                    //.Aggregates(aggregates =>aggregates.Add(p => p.TotalAmount).Sum())
                                    .PageSize(4)
                                    .Group(group=>group.Add(m=>m.Woreda))
                                    //.Model(model => model.Id(p => p.TransportRequisitionID))
                                    .Read(read => read.Action("TransReqWithoutTransporter_Read", "TransportOrder"))

      ))*@

<script>
    function onGenerate(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("TransportContract", "TransportOrder")" + "/" + dataItem.TransportOrderID;

    }
</script>
