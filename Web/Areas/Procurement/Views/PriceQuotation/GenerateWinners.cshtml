@using Cats.Areas.Procurement.Models
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Generate Winners";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section Toolbar    {
    
     <a data-toggle="modal" data-target="#myModal" class="btn toolbar-btn " >Generate</a>       
         
}

<div class="container">
<div class="row">
    <h4>Identify Winner Transporters</h4>
</div>
<div class="row">
    @Html.Partial("_GenerateWinnersIgnitor")
</div>

<h3>Approved bid proposals to identify winners from </h3>
<div class="row">
    @(Html.Kendo().Grid<TransportBidQuotationHeaderViewModel>()
          .Name("grid")
          .Columns(columns =>
              {
                  //columns.Bound(p => p.BidNumber).ClientTemplate("<a href='" + Url.Action("Details", "PriceQuotation", new { id = "#=TransportBidQuotationHeaderID#" }) + " '>#=BidNumber#</a>  "); ;
                 
                  columns.Bound(p => p.Transporter);
                  //columns.Bound(p => p.Region);
                  columns.Bound(p => p.BidBondAmount);
                  columns.Bound(p => p.OffersCount);
                  //columns.Bound(p => p.Status);
              })
          .Scrollable()
          .Filterable()
          //.Groupable()
          //.Events(events => events.DataBound("onDataBound"))
          .HtmlAttributes(new { style = "height:430px;" })
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        //.Group(group =>
                                        //    {
                                        //        group.Add(m => m.Zone);
                                        //        group.Add(m => m.Woreda);
                                        //    })
                                        //.PageSize(8)
                                        .Model(model => model.Id(p => p.TransportBidQuotationHeaderID))
                                        .Read(read => read.Action("ReadApprovedProposals", "PriceQuotation", new
                                            {
                                                bidID = @ViewBag.filter.BidID,
                                                regionID = @ViewBag.filter.RegionID
                                            }))
                                        // .Read(read => read.Action("ReadBidWinners", "PriceQuotation", new
                                        //{
                                        //    bidNumber = @ViewBag.filter.BidID,
                                        //    regionID = @ViewBag.filter.RegionID
                                        //}))
                                        
                                        //.Update(update => update.Action("SaveBidProposals", "PriceQuotation"))
          ))
</div>
    </div>
<script>
    function onChangeStatus(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("Edit", "BidWinner")" + "/" + dataItem.BidWinnnerID;
    }
</script>