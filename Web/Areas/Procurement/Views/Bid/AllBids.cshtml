@using Kendo.Mvc.UI
@model  List<Cats.Models.ViewModels.Bid.BidViewModel>

@{
    ViewBag.Title = "Create Bid";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div id="modalWindow">
    <h2>Approve Bid?</h2>
    <button id="yes" class="k-button">Yes</button>
    <button id="no" class="k-button">No</button>
</div>
<script>
var wnd;
$(document).ready(function () {
    wnd = $("#modalWindow").kendoWindow({
                        title: "Approve confirmation",
                        modal: true,
                        visible: false,
                        resizable: false,
                        width: 300
                    }).data("kendoWindow");
});
</script>
<script>

    function onApprove(e) {
        e.preventDefault();
        var grid = this;
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var row = $(e.currentTarget).closest("tr");
        wnd.center().open();

        $("#yes").click(function () {
           
            window.location = "bid/ApproveBid/" + dataItem.BidID;
            wnd.close();
        });
        
        $("#no").click(function () {
            wnd.close();
        });
        //var agree = confirm("Are you sure you want to approve this bid?");
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //if (agree)
        //    window.location = "bid/ApproveBid/" + dataItem.BidID;
    }
</script>
<div class="well">
    <h4 class="page-header">Bid For Transporters</h4>
    <div align="right">
        <a href="Create" class="btn btn-success">Create New Bid</a>
    </div>
</div>

@section LeftBar
{
    @Html.Partial("_BidLeftBar")
}

@(Html.Kendo().Grid<Cats.Models.ViewModels.Bid.BidViewModel>()
    .Name("Bid")
    .Columns(columns =>
        {
            columns.Bound(p => p.BidNumber).Template(
                
                @<text>
<a href="@Url.Action("Edit", "Bid", new { Area = "Procurement", id = item.BidID })">@Html.DisplayFor(modelItem => item.BidNumber)</a>
</text>);
            columns.Bound(p => p.StartDate).Format("{0:MM/dd/yyyy}");
            columns.Bound(p => p.EndDate).Format("{0:MM/dd/yyyy}");
            columns.Bound(p => p.OpeningDate).Format("{0:MM/dd/yyyy}");
            columns.Bound(p => p.Status).Title("Status");
            columns.Command(p => p.Custom("Edit").Click("bidEdit"));
                //{
                //    p.Custom("Edit").Click("bidEdit");
                //    p.Custom("Approve").Click("onApprove");
                //});

        })
    .Pageable()
    .Sortable()
    .Filterable()
    .ClientDetailTemplateId("template")
        //.HtmlAttributes(new { style = "height:430px;" })
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(5)
            .Model(model => model.Id(p => p.BidID))
            .Read(read => read.Action("All_Bids", "Bid"))
 
     )
     .Events(events => events.DataBound("dataBound"))
      )

<script id="template" type="text/kendo-tmpl">
    
                    @(Html.Kendo().Grid<Cats.Models.ViewModels.Bid.BidDetailViewModel>()
                        .Name("bid_#=BidID#")
                        .Columns(columns =>
                        {
                            //columns.Bound(b => b.BidDetailID).Title("ID").Width(56);
                            columns.Bound(b => b.Region);
                            columns.Bound(b => b.AmountForReliefProgram).Title("Relief");
                            columns.Bound(b => b.AmountForPSNPProgram).Title("PSNP");
                            columns.Bound(b => b.BidDocumentPrice);
                            columns.Bound(b => b.CPO);

                        })
                        .ToolBar(toolBar => toolBar.Save())
                        .Editable(editable => editable.Mode(GridEditMode.InCell))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Batch(true)
                            .ServerOperation(false)
                            .Events(events => events.Error("error_handler"))
                            .PageSize(5)
                            .Model(model =>
                              {
                                  model.Id(p => p.BidDetailID);
                                  model.Field(p => p.RegionID);
                                  model.Field(p => p.BidDetailID).Editable(false);
                                  model.Field(p => p.Region).Editable(false);
                              })
                            //.Model(model => model.Id(p => p.BidDetailID))
                            .Read(read => read.Action("BidDetail_Read", "Bid", new { bidID = "#=BidID#" }))
                            //.Update(update=>update.Action("Edit","Bid"))
                            .Update(update => update.Action("BidDetail_Update", "Bid"))

                        )
                        .Pageable()
                        .Sortable()
                        .ToClientTemplate())
                
</script>

<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }
</script>

<script>
    function bidEdit(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "/Procurement/Bid/EditBidStatus/" + dataItem.BidID;
    }
</script>
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>
