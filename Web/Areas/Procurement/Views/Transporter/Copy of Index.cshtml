@using Kendo.Mvc.UI
@model IEnumerable<Cats.Procurement.Models.TransporterPOCO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";

}
<div>
    <h4>Transporter Registration</h4>
</div>



@(Html.Kendo().Grid<Cats.Procurement.Models.TransporterPOCO>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Name);
        columns.Bound(p => p.Region).Width(100);
        columns.Bound(p => p.SubCity).Width(100);
        columns.Bound(p => p.TelephoneNo).Width(100);
  
        
        columns.Command(command => { 
            //command.Edit(); 
            command.Custom("Edit").Click("editRecord");
            command.Destroy(); }).Width(172);
    })
    .ToolBar(toolbar => toolbar.Create())
  //  .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.TransporterID))
        .Read(read => read.Action("EditingInline_Read", "Transporter"))
        .Destroy(update => update.Action("EditingInline_Destroy", "Transporter"))
        //.Update(update => update.Action("EditingInline_Update", "Transporter"))
        //.Create(update => update.Action("EditingInline_Create", "Transporter"))
        
        .Update(update => update.Action("Edit", "Transporter"))
        .Create(update => update.Action("Create", "Transporter"))
    )
)
@(Html.Kendo().Window().Name("Details")
    .Title("Customer Details")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)       
)

 <script type="text/x-kendo-template" id="template">
    <div id="details-container">
        <h2>#= Name # #= Region #</h2>
        <em>#= SubCity #</em>
        <dl>
            <dt>Capital: #= Capital #</dt>
            <dt>Employees: #= EmployeeCountMale #</dt>
            <dt>Edit: @Html.ActionLink("Edit", "Edit",1) </dt>
      
        </dl>
    </div>
</script>
<script type="text/javascript">
    var detailsTemplate = kendo.template($("#template").html());
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function editRecord(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
        window.location = "/Procurement/Transporter/Edit/" + dataItem.data.TransporterID
    }
</script>
<!--
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-bordered">



    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Region)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubCity)
        </th>
        <th>
            Tel
        </th>
        <th>
            Mob
        </th>
        <th>
           Capacity
        </th>
        <th>
            Capital
        </th>
        <th>
            Employees
        </th>
       
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Region)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SubCity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TelephoneNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileNo)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.LiftCapacityTotal)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Capital)
        </td>
        <td>
            @{var empcount = item.EmployeeCountMale + item.EmployeeCountFemale;}
            @empcount
        </td>
       
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.TransporterID }) |
            @Html.ActionLink("Details", "Details", new { id=item.TransporterID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.TransporterID })
        </td>
    </tr>
}

</table>
-->