@model Cats.Models.Hubs.ViewModels.DispatchAllocationViewModel

@using Cats.Web.Hub.Helpers
@using Kendo.Mvc.UI
@{
    ViewBag.Title = Html.Translate("Edit dispatch allocation");
 }
<p>
    @Html.Translate("Please use this form to edit dispatch allocation for your hub.")
</p>

<style>
    .input
    {
        border:solid 1px #888;
        padding:2px;
        border-radius:4px;
    }
    /*
    .control-group
    {
        background:#EEE;
    }
    .controls
    {
        background:#0EE;
    }
        */
</style>


@using (Html.BeginForm("SaveFDPAllocationAjax", "DispatchAllocation", FormMethod.Post, new { @id = "frm_edit_inline" }))
    {
    @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.PartitionID)
        @Html.HiddenFor(model => model.DispatchAllocationID)
        @Html.HiddenFor(model => model.HubID)
        @Html.HiddenFor(model => model.ShippingInstructionID)
        @Html.HiddenFor(model => model.ProjectCodeID)
        <div class="form-horizontal two-col-form">
                  <div class="control-group required">
                        @Html.LabelFor(model => model.RequisitionNo, Html.Translate("Requisition No"),new { @class="control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.RequisitionNo)
                        @Html.ValidationMessageFor(model => model.RequisitionNo)
                    </div>
                  </div>
                  <div class="control-group required">
                     @Html.LabelFor(model => model.BidRefNo, Html.Translate(" Bid Ref Number"),new { @class="control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.BidRefNo)
                        @Html.ValidationMessageFor(model => model.BidRefNo)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.CommodityTypeID, Html.Translate("Commodity Type"),new { @class="control-label" })
                   <div class="controls">
                                           
                        @(Html.Kendo().ComboBox().Name("CommodityTypeID").Filter("contains").BindTo((SelectList)ViewBag.CommodityTypes).Suggest(true).AutoBind(true))
                        @Html.AuditTrial("DispatchAllocationID", "CommodityTypeID", Model.DispatchAllocationID)
                        @Html.ValidationMessageFor(model => model.CommodityTypeID)                   
                    </div>
                  </div>

                  <div class="control-group required">
                     @Html.LabelFor(model => model.CommodityID, Html.Translate("Commodity"),new { @class="control-label" })
                    <div class="controls">
                        
                        @(Html.Kendo().ComboBox().Name("CommodityID").Filter("contains").BindTo((SelectList)ViewBag.Commodities).Suggest(true).AutoBind(true))
                        
                        
                        @Html.ValidationMessageFor(model => model.CommodityID)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.ProgramID, Html.Translate("Program"),new { @class="control-label" })
                    <div class="controls">
                        @(Html.Kendo().ComboBox().Name("ProgramID").Filter("contains").BindTo((SelectList)ViewBag.Programs).Suggest(true).AutoBind(true))
                        
                         @Html.ValidationMessageFor(model => model.ProgramID)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.DonorID, Html.Translate("Donor"),new { @class="control-label" })
                    <div class="controls">
                     @(Html.Kendo().ComboBox()
                      .Name("DonorID")
                      .Filter("contains")
                      .Placeholder("Select Donor...")
                      .BindTo((SelectList)ViewBag.Donors)
                      .Suggest(true)
                      .AutoBind(true)
          
                      .HtmlAttributes(new { style = string.Format("width:{0}px", 200) })
                    )
                        @Html.ValidationMessageFor(model => model.DonorID)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Beneficiery,new { @class="control-label" })
                    <div class="controls">
                        @Html.EditorFor( model => model.Beneficiery,new { @class="input-small" })
                        @Html.ValidationMessageFor(model => model.Beneficiery)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.FDPID, "FDP",new { @class="control-label" })
                    <div class="controls">
                        @Html.HiddenFor(model => model.FDPID)
                        
                        @Html.ValidationMessageFor(model => model.FDPID)
                        <div class="input" id="FDPName">@Model.FDPName</div>
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Amount, Html.Translate("Amount"),new { @class="control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.Amount)
                        @Html.ValidationMessageFor(model => model.Amount)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Unit,new { @class="control-label" })
                    <div class="controls">
                        @(Html.Kendo().ComboBox().Name("Unit").Filter("contains").BindTo((SelectList)ViewBag.Units).Suggest(true).AutoBind(true))
                        
                        @Html.ValidationMessageFor(model => model.Unit)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Year,new { @class="control-label" })
                    <div class="controls">
                        @(Html.Kendo().ComboBox().Name("Year").Filter("contains").BindTo((SelectList)ViewBag.Years).Suggest(true).AutoBind(true))
                        @Html.ValidationMessageFor(model => model.Year)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Month,new { @class="control-label" })
                    <div class="controls">
                       
                        @(Html.Kendo().ComboBox().Name("Month").Filter("contains").BindTo((SelectList)ViewBag.Months).Suggest(true).AutoBind(true))
                        @Html.ValidationMessageFor(model => model.Month)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.Round,new { @class="control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.Round)
                        @Html.ValidationMessageFor(model => model.Round)
                    </div>
                  </div>

                  <div class="control-group required">
                    @Html.LabelFor(model => model.TransporterID, Html.Translate("Transporter"),new { @class="control-label" })
                    <div class="controls">
                         @(Html.Kendo().ComboBox().Name("TransporterID").Filter("contains").BindTo((SelectList)ViewBag.Transporters).Suggest(true).AutoBind(true))
                         @Html.ValidationMessageFor(model => model.TransporterID)
                    </div>
                  </div>


                  <div class="control-group required" style="display:none">
                    <label class="control-label" for="inputEmail">
                        *Label*
                    </label>
                    <div class="controls">
                        *controls*
                    </div>
                  </div>



        </div>
        <div style="clear:both;"></div>



}

<script type="text/javascript">
    var selectedFDP={RegionID:@Model.RegionID , ZoneID: @Model.ZoneID ,WoredaID: @Model.WoredaID ,FDPID: @Model.FDPID }
    var onDispatchFDPChange = function (type, selection) {
        console.log("onDispatchFDPChange", selection);
        if (type != "fdp")
        { return;}
        $("#FDPID").val(selection.FDPID);
        $("#FDPName").html(selection.fdpName);
        selectedFDP=selection
    }
    $(document).ready(function () {
      //  $.validator.unobtrusive.parse('#frm_edit_inline');
        $(".form-horizontal label").addClass("control-label");
        $("#FDPName").click(function () { showFDPSelector({ target: 'FDPName', callback: "onDispatchFDPChange",adminUnit:selectedFDP }) })
        $("input").addClass("input-medium");
        $(".input").addClass("input-medium");
    });

</script>
