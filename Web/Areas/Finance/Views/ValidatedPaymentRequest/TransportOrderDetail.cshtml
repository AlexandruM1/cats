@using Cats.Areas.Logistics.Models
@using Cats.Areas.Procurement.Models
@using Cats.Helpers
@using Cats.Security
@using Kendo.Mvc.UI
@model TransportOrderViewModel

@{
    ViewBag.Title = Html.Translate("Details");
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section Toolbar
{ 
    <a href="@Url.Action("PaymentRequests", "ValidatedPaymentRequest", new { Area = "Finance", transporterID = Model.TransporterID })" class="btn" data-buttontype="btn_back_to_list" title="Back to List"><i class="icon-list"></i></a>
}
<div class="control-group form-horizontal well">
    <div class="row">
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Transport Order No"))

                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.TransportOrderNo, new { Disabled = true })
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Transporter"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.Transporter, new { Disabled = true })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Contract Number"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.ContractNumber, new { Disabled = true })
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Order Date ET"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.OrderDateET, new { Disabled = true })
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Requested Dispatch Date ET"), new { @class = "cats-date-pref" })
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.RequestedDispatchDateET, new { Disabled = true })
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Order ExpiryDate ET"), new { @class = "cats-date-pref" })
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.OrderExpiryDateET, new { Disabled = true })
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Start Date"), new { @class = "cats-date-pref" })
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.StartDate, new { Disabled = true })
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(@Html.Translate("End Date"), new { @class = "cats-date-pref" })
                </div>
                <div class="controls">
                    @Html.TextBoxFor(m => m.EndDate, new { Disabled = true })
                </div>
            </div>
        </div>
    </div>
</div>


@(Html.Kendo().Grid((IEnumerable<TransportOrderDetailViewModel>)ViewData["Transport.order.detail.ViewModel"])
.Name("Grid").Columns(columns =>
                          {
                              columns.Bound(trd => trd.Woreda).Title(@Html.Translate("Woreda"));
                              columns.Bound(trd => trd.RequisitionNo).Title(@Html.Translate("Woreda"));
                              columns.Bound(trd => trd.FDP).Title(@Html.Translate("Woreda"));
                              columns.Bound(trd => trd.OriginWarehouse).FooterTemplate(@<text><div align="right"><strong>@Html.Translate("Total")</strong></div></text>);
                              columns.Bound(trd => trd.QuantityQtl).FooterTemplate(@<text><div align="right"><strong>@item.Sum.Format("{0:N2}")</strong></div></text>).HtmlAttributes(new { align = "Right" });
                              columns.Bound(trd => trd.TariffPerQtl).FooterTemplate(@<text><div align="right"><strong>@item.Sum.Format("{0:N2}")</strong></div></text>).HtmlAttributes(new { align = "Right" });
                              columns.Bound(trd => trd.TotalAmount).FooterTemplate(@<text><div align="right"><strong>@item.Sum.Format("{0:N2}")</strong></div></text>).HtmlAttributes(new { align = "Right" });

                          })
                          //.Pageable()
                          .DataSource(
                          model => model.Ajax()
                              .Aggregates(aggregates =>aggregates.Add(p => p.QuantityQtl).Sum())
                              .Aggregates(aggregates =>aggregates.Add(p => p.TariffPerQtl).Sum())
                              .Aggregates(aggregates =>aggregates.Add(p => p.TotalAmount).Sum())
                                       )
                          )
)
<style type="text/css">
    .k-footer-template td {
        background: #DDD;
        border-width: 0;
    }
</style>