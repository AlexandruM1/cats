@model Cats.Models.LoanReciptPlan
@using Cats.Areas.Logistics.Models
@using Cats.Helpers
@using Cats.Models.Constant
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    const string PAGE_NAME = "Logistics.ReciptPlanForLoanAndOthers.Detail";
}
@section Toolbar
{
  
    <div class="btn-group">
        <button class="btn">@Html.Translate("Action")</button>
        
           
            <button class="btn dropdown-toggle " data-toggle="dropdown">
                <span class="caret"></span>
            </button>
           
        <ul class="dropdown-menu">
            <li><a id="btnRecive" href="@Url.Action("ReciptPlan", "ReciptPlanForLoan", new { id = Model.LoanReciptPlanID})">@Html.Translate("Recieve Plan")</a></li>
             @if(Model.StatusID==(int)LocalPurchaseStatus.Draft)
       {
           <li><a id="btnEdit" href="@Url.Action("Edit", "ReciptPlanForLoan", new {id = Model.LoanReciptPlanID})">@Html.Translate("Edit")</a></li>
            <li><a id="btnApprove" href="@Url.Action("Approve", "ReciptPlanForLoan", new {id = Model.LoanReciptPlanID})">@Html.Translate("Approve")</a></li>
      }
    </ul>
    <a class="btn toolbar-btn " href="@Url.Action("Index", "ReciptPlanForLoan")" data-buttontype="btn_back_to_list"></a>
    </div>

}

@section LeftBar {
    

}
<script type="text/javascript">
    $(function () {

        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });

        $('#btnRecive').click(function () {

            // alert("");
            $('#dialogContentSmall').load(this.href, function () {
                $('#dialogDivSmall').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });
        
        $('#btnEdit').click(function () {

            // alert("");
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });

    });
</script>
<div id='dialogDivSmall' class='modal hide fade in'>
    <div id='dialogContentSmall'></div>
</div>
<div id='dialogDiv' class='modal hide fade in' style="width: 820px;margin-right: 10px">
    <div id='dialogContent'></div>
</div>
    @Html.HiddenFor(m=>m.LoanReciptPlanID)
    @Html.HiddenFor(m=>m.StatusID)
    @Html.HiddenFor(m=>m.ShippingInstructionID)
<table border="0" class="form-horizontal">
    <tr style="width: 300px">
        <td style="width:50%">
            <div class="control-label">
                @Html.LabelFor(m=>m.ShippingInstruction.Value,@Html.Translate("SI Number"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.ShippingInstruction.Value,new {disabled=true})
                @Html.ValidationMessageFor(m=>m.ShippingInstruction.Value)
            </div>
        </td>
        <td style="width: 50%">
            <div class="control-label">
                @Html.LabelFor(m=>m.LoanSource,@Html.Translate("Loan Source"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.LoanSource,new {disabled=true})
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.ProgramID,@Html.Translate("Program"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.Program.Name,new {disabled=true})
            </div>
        </td>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.CommodityID,@Html.Translate("Commodity"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.Commodity.Name,new {disabled=true})
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.CommoditySourceID,@Html.Translate("Commodity Source"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.CommoditySource.Name,new {disabled=true})
                   
            </div>
        </td>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.ReferenceNumber,@Html.Translate("Reference Number"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.ReferenceNumber,new {disabled=true})
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.ProjectCode,@Html.Translate("Project Code"))
            </div>
            <div class="controls">
                @Html.TextBoxFor(m=>m.ProjectCode,new {disabled=true})
            </div>
               
        </td>
        <td>
            <div class="control-label">
                @Html.LabelFor(m=>m.Quantity,@Html.Translate("Quantity in MT"))
            </div> 
            <div class="controls">
                @Html.TextBoxFor(m=>m.Quantity,new {disabled=true})
            </div>
        </td>
    </tr>
</table>
<h4> List of Recived Loans</h4>
@(Html.Kendo().Grid<LoanReciptPlanWithDetailViewModel>()
              .Name("grid")
              .Columns(columns =>
                  {
                      columns.Bound(m => m.MemoRefrenceNumber).Title(@Html.Translate("Memo Reference number"));
                      columns.Bound(m => m.HubName).Title(@Html.Translate("Hub"));
                      columns.Bound(m => m.CreatedDate).Title(Html.Translate("Recieved Date"));
                      columns.Bound(m => m.Amount).Width(200).Title(@Html.Translate("Recieving Amount")).HtmlAttributes(new { align = "right" });
                      columns.Bound(m => m.Remaining).Width(200).Title(@Html.Translate("Remaining")).HtmlAttributes(new { align = "right" });
                     // columns.Bound(m => m.Remaining).ClientFooterTemplate("Total in Birr <b>:#=kendo.format('{0:N}', sum)#</b>").Format("{0:N}");
                      
                  }

              )

              .Navigatable()
              .Scrollable()
              .HtmlAttributes(new { style = "height:230px;" })
              .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Group(t=>t.Add(m=>m.HubName))
                                            .Model(model =>model.Id(m=>m.LoanReciptPlanDetailID))
                                            .Read(read => read.Action("LoanReciptPlanDetail_Read", "ReciptPlanForLoan",new {loanReciptPlanID=Model.LoanReciptPlanID}))
              //.Update(update => update.Action("Commodity_Update", "Request"))
              )
       )
