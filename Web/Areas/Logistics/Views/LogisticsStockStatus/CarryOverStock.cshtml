@using Cats.Models.Hubs
@using Kendo.Mvc.UI
@using Cats.Helpers
@{
    ViewBag.Title = "Carry Over Stock";
    Layout = "~/Views/Shared/_MainLayoutWide.cshtml";
}

<h4 class="page-header">@Html.Translate("Carry Over Stock")</h4>
<div class="row-fluid form-inline">
    <div class="control-group span2">
        <div class="control-label">
            @Html.Translate("Hub")
        </div>
        <div class="">
            @Html.DropDownList("SelectHubID", (IEnumerable<SelectListItem>)ViewBag.SelectHubID, "Select Hub",new {@class="controls span11"})
        </div>
    </div>
    <div class="control-group span2">
        <div class="control-label">
            @Html.Translate("Program")
        </div>
        <div class="">
            @Html.DropDownList("SelectProgramID", (IEnumerable<SelectListItem>)ViewBag.SelectProgramID, "Select Program",new {@class="controls span11"})
        </div>
    </div>

</div>
@(Html.Kendo().Grid<VWCarryOver>().Name("grid").Columns(col =>
                                                       {

                                                           col.Bound(t => t.ShippingInstruction).Title(Html.Translate("Shipping Instructions"));
                                                           col.Bound(t => t.Commodity).Title(Html.Translate("Commodity"));
                                                           col.Bound(t => t.ProjectCode).Title(Html.Translate("Project Code"));
                                                           col.Bound(t => t.Donor).Title(Html.Translate("Donor"));
                                                           col.Bound(t => t.Program).Title(Html.Translate("Program"));
                                                           col.Template(c => { }).ClientTemplate("#=toCatsPreferedUnit(data.CarryOver)#").HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Carry Over"));
                                                           col.Template(c => { }).ClientTemplate("#=toCatsPreferedUnit(data.Received)#").HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Received"));
                                                           col.Template(c => c.Expected).ClientTemplate("#=toCatsPreferedUnit(data.Expected)#").HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Expected"));
                                                           col.Template(c => c.Commited).ClientTemplate("#=toCatsPreferedUnit(data.Commited)#").HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Commited"));

                                                           col.Template(c => { }).ClientTemplate("#=toCatsPreferedUnit(data.UnCommited)#").Title(Html.Translate("Un Commited")).HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" });
                                                           col.Template(c => c.Dispatched).ClientTemplate("#=toCatsPreferedUnit(data.Dispatched)#").HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Dispatched"));

                                                           col.Template(c => { }).ClientTemplate("#=toCatsPreferedUnit(data.PhysicalStock)#").Title(Html.Translate("Physical Stock")).HeaderHtmlAttributes(new { @class = "cats-unit-pref" }).HtmlAttributes(new { align = "right" });

                                                       }).DataSource(datasource =>
                                                                             datasource.Ajax().Read(read => read.Action("CarryOverStock_read", "LogisticsStockStatus").Data("filterData"))
                                                                                 .Group(t => t.Add(m => m.Commodity))

                                                                         ).Sortable().Filterable()
      )
<script type="text/javascript">
  
    //function calculatePhysicalStock(data) {
    //    return toCatsPreferedUnit(data.Received - data.Dispatched);
    //}
    //function calculateUnCommitedStock(data) {
    //    return toCatsPreferedUnit(data.Received - data.Dispatched - data.Commited);
    //}
    function filterData() {

        return {
            hubId: $("#SelectHubID").val(),
            programId: $("#SelectProgramID").val()
        };
    }

    $(document).ready(function () {
        $("#SelectHubID").change(function () {
            var grid = $("#grid").data("kendoGrid");
            grid.dataSource.read();
        });
        $("#SelectProgramID").change(function () {
            var grid = $("#grid").data("kendoGrid");
            grid.dataSource.read();
        });
        $("#toolbar_button_print").click(function (e) {
            e.preventDefault();
            var hubid = $("#SelectHubID").val();
            var programid = $("#SelectProgramID").val();
            var url = '@Url.Action("PrintCarryOverStock", "LogisticsStockStatus",new{hubId="__id__",programId="__id2__"})';
            
            url = url.replace("__id__", hubid);
            url = url.replace("__id2__", programid);
           
            window.open(url, "_blank");
           
        });
        $("#toolbar_button_export").click(function (e) {
            e.preventDefault();
            var hubid = $("#SelectHubID").val();
            var programid = $("#SelectProgramID").val();
            var url = '@Url.Action("ExportCarryOverStock", "LogisticsStockStatus",new{hubId="__id__",programId="__id2__"})';

            url = url.replace("__id__", hubid);
            url = url.replace("__id2__", programid);

            window.open(url, "_blank");

        });
    });
    
</script>
