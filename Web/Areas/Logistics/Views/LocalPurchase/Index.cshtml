@using Cats.Areas.Logistics.Models
@using Kendo.Mvc.UI
@using Cats.Helpers

@{
    ViewBag.Title = @Html.Translate("Index");
    Layout = "~/Views/Shared/_MainLayout.cshtml";  
}
@section Toolbar
{
    <a data-buttontype="btn_new_record" class="btn toolbar-btn " href="@Url.Action("Create", "LocalPurchase")"></a>
}
<h4>@Html.Translate("List of Receipt Plan From Local Purchase")</h4>
 @(Html.Kendo().Grid<LocalPurchaseViewModel>()
              .Name("grid")
              .Columns(columns =>
                  {
                      columns.Bound(m => m.SiNumber).Title(Html.Translate("SI Number")).
                          ClientTemplate("<a href='" + Url.Action("Details", "LocalPurchase", new { id = "#=LocalPurchaseID#" }) + " '>#=SiNumber#</a>  "); ;
                      columns.Bound(m => m.Program).Title(Html.Translate("Program"));
                      columns.Bound(m => m.DonorName).Width(200).Title(Html.Translate("Donor"));
                      columns.Bound(m => m.SupplierName).Width(200).Title(Html.Translate("Supplier Name"));
                      columns.Bound(m => m.Commodity).Width(200).Title(Html.Translate("Commodity"));
                      columns.Bound(m => m.ReferenceNumber).Title(Html.Translate("Reference Number"));
                      columns.Bound(m => m.Quantity).HtmlAttributes(new { align = "right" }).Title(Html.Translate("Quantity"));
                      columns.Bound(m => m.Status).Title(Html.Translate("Status"));
                      columns.Command(m => m.Custom("OnRevert").Click("Revert"));
                      columns.Command(m => m.Custom("OnDelete").Click("Delete"));
                  }

              )

              .Navigatable()
              .Scrollable()
              .HtmlAttributes(new { style = "height:430px;" })
              .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Model(model =>model.Id(m=>m.LocalPurchaseID))
                                            .Read(read => read.Action("LocalPurchase_Read", "LocalPurchase"))
              //.Update(update => update.Action("Commodity_Update", "Request"))
              )
              )
<script>
    
    function onDataBound(e) {
        var grid = $("#grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        //alert(gridData.length);
        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            //alert(gridData[i].Status);
            if (gridData[i].Status == "Draft") {
                var currentRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                var approveButton = $(currentRow).find(".k-grid-Revert");
                approveButton.hide();
                
            }


        
        }
    }
    

    function OnDelete(e) {
        e.preventDefault();
        
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.wnd.center().open();

        $("#yes").click(function () {

            window.location = "@Url.Action("Delete", "LocalPurchase")" + "/" + dataItem.LocalPurchaseID;
            window.wnd.close();
        });

        $("#no").click(function () {
            window.wnd.close();
        });
    }
    
    function OnRevert(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.wnd.center().open();

        $("#yes").click(function () {

            window.location = "@Url.Action("RevertToDraft", "LocalPurchase")" + "/" + dataItem.LocalPurchaseID;
            window.wnd.close();
        });

        $("#no").click(function () {
            window.wnd.close();
        });
    }
</script>