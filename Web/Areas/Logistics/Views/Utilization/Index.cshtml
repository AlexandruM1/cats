@using Kendo.Mvc.UI
@using LanguageHelpers.Localization

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="form-horizontal">
            
     @Html.HiddenFor(m => m.)
    <div class="control-group" id="region">
        <div class="control-label">
            @Html.Label(Translator.Translate("Region"))
        </div>
        <div class="controls" id="div_region">
            @Html.DropDownList("RegionID",String.Empty)  
        </div>
    </div>

    <div class="control-group">
        <div class="control-label">
            @Html.Label(Translator.Translate("Zone"))
        </div>
        <div class="controls" id="div_zone">
            @Html.DropDownList("ZoneID",String.Empty)
           
               
        </div>

    </div>

    <div class="control-group">
        <div class="control-label">
            @Html.Label(Translator.Translate("Woreda"))
        </div>
        <div class="controls" id="div_woreda" >
            @Html.DropDownList( "WoredaID",string.Empty)
            
        </div>

    </div>

</div>




<table class="borderless">
    <tr>
        <td>
            <div style="float: left;">
                @(Html.Kendo().Grid<Cats.Models.ViewModels.UtilizationViewModel>()
                      .Name("RequisitionGrid")
                      .Columns(columns => columns.Bound(p => p.RequisitionNo).Title(Translator.Translate("Requestion No")))
                      .HtmlAttributes(new { style = "height:430px;" })
                      .DataSource(dataSource => dataSource
                                                    .Ajax()
                                                    .Model(model => model.Id(p => p.RequisitionId))
                                                    .Read(read => read.Action("ReadRequestionNumbers", "Utility", new { regionId = -1,programId =-1,year =-1 }))
                     
                      )
                      )
            </div>
        </td>
        <td>

            <div>

                @(Html.Kendo().Grid<Cats.Models.ViewModels.UtilizationDetailViewModel>()
                      .Name("RequisitionGridDetail")
                      .Columns(columns =>
                                   {
                                      
                                       columns.Bound(p => p.FDP).Width(100).Title(Translator.Translate("Zone")).HtmlAttributes(new { style = "background-color:lightgray" });
                                       columns.Bound(p => p.AllocatedAmount).Width(100).Title(Translator.Translate("Woreda")).HtmlAttributes(new { style = "background-color:lightgray" });
                                       columns.Bound(p => p.NumberOfBeneficiaries).Width(100).Title(Translator.Translate("FDP")).HtmlAttributes(new { style = "background-color:lightgray" });
                                       columns.Bound(p => p.DispatchedToFDPAmount).Width(60).Title(Translator.Translate("Dispatched")).HtmlAttributes(new { align = "right" });
                                       columns.Bound(p => p.DispatchedToFDPAmount).Width(60).Title(Translator.Translate("Beneficiaries")).HtmlAttributes(new { align = "right" });
                                       
                                      

                                   })
                   
                      .Editable(editable => editable.Mode(GridEditMode.InCell))
                     
                      .Scrollable()
                      .Selectable(t => t.Mode(GridSelectionMode.Single))
                      .Navigatable()
                      .HtmlAttributes(new { style = "height:430px;" })
                      .Events(events => events.DataBound("onDataBound"))
                      .DataSource(dataSource => dataSource
                                                    .Ajax()
                                                   
                                                    .Model(model =>
                                                               {
                                                                   model.Id(p => p.FdpId);
                                                                   model.Field(detail => detail.FDP).Editable(false);
                                                                   model.Field(detail => detail.AllocatedAmount).Editable(false);
                                                                   model.Field(detail => detail.DispatchedToFDPAmount).Editable(false);
                                                                   model.Field(detail => detail.NumberOfBeneficiaries).Editable(false);
                                                               })
                                                  

                                                    .Read(read => read.Action("Allocation_Read", "Request", new { id = ViewBag.RequestID }))
                                                    .Update(update => update.Action("ReadRequisitionDetail", "Utility", new {requisitionId = -1}))
                                                  
                      ))
            </div>
        </td>
    </tr>
</table>









<script>

    var admin_region_hash = {};
    var admin_zone_hash = {};
    var admin_regions = {};
    
    $(function () {
        
       
        $.getJSON('@Url.Action("GetCasscadeAdminUnits", "Utilization")', function (data) {
            

            var msg = "";
                for (var i in data) {
                    
                    msg += "\n" + data[i].RegionName;
                   
                    var keyr = data[i].RegionID;
                    admin_regions[keyr] = data[i];
                   
                    var zoneCount = data[i].zones.length;
                   
                    for (var r = 0; r < zoneCount; r++) {
                        var keyZone = data[i].zones[r].ZoneID;
                        admin_region_hash[keyZone] = data[i].zones[r];
                       
                        var countw = data[i].zones[r].Woredas.length;
                       
                        for (var jj = 0; jj < countw; jj++) {
                            var keyw = data[i].zones[r].Woredas[jj].WoredaID;
                            admin_zone_hash[keyw] = data[i].zones[r].Woredas[jj].fdps;
                        }
                    }
                }
            

        });


        $("#RegionID").change(function () {
         
            var selectedRegionId = $("#RegionID").val();
            var region = admin_regions[selectedRegionId];
            var zones = region.zones;
            alert("tst");
            alert(zones.length);
           
            var htmr = "<select name='ZoneID' id ='ZoneID' > ";
            for (var r in zones) {

                htmr += "<option value='" + zones[r].ZoneID + "'>" + zones[r].ZoneName + "</option>";
              
            }
            htmr += "</select>";
            $("#div_zone").html(htmr);
            
           
            $("#ZoneID").change(function() {
                var zoneId = $("#ZoneID").val();
                var zone = admin_region_hash[zoneId];
                var woredas = zone.Woredas;

               
                var htm = "<select name='WoredaID' id ='WoredaID' > ";
                for (var z in woredas) { 
                    htm += "<option value='" + woredas[z].WoredaID + "'>" + woredas[z].WoredaName + "</option>";  
                }

                htm += "</select>";
                $("#div_woreda").html(htm);

               
            });
        });
        

       
        $("#ZoneID").change(function () {
           
            var zoneId = $("#ZoneID").val();
            var zone = admin_region_hash[zoneId];
            var woredas = zone.Woredas;


            var htm = "<select name='WoredaID' id ='WoredaID' > ";
            for (var z in woredas) {
                htm += "<option value='" + woredas[z].WoredaID + "'>" + woredas[z].WoredaName + "</option>";
            }

            htm += "</select>";
            $("#div_woreda").html(htm);

            
        });
        
       
    });
</script>