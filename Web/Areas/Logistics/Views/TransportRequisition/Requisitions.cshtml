@using Cats.Models.ViewModels
@using Kendo.Mvc.UI
@model IEnumerable<Cats.Areas.Procurement.Models.RequisitionToDispatchSelect>

@{
    ViewBag.Title = "TransportRequisitions";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section LeftBar
{
    @Html.Partial("_AllocationLeftBar")
}
@section Toolbar
{
    <a class="btn toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_create_request"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_cancel" href="@Url.Action("Index", "TransportRequisition")" title="cancel"></a>
}

<h4 class="page-header">Hub and Project/SI Code assigned Requisitions.</h4>
@using (Html.BeginForm("Requisitions", "TransportRequisition", FormMethod.Post, new { id = "frm_create_request" }))
{

    <div class="k-content">
        <table class="table table-bordered table-condensed table-striped"  id="kGrid">
            <thead>
                <tr>
                    <th>Select</th>
                    <th>
                        @Html.DisplayNameFor(model => model.CommodityName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RequisitionNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.QuanityInQtl)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.OrignWarehouse)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RegionName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Zone)
                    </th>

                    <th>
                        @Html.Label("Status")

                    </th>

                    <th>ID</th>


                    
                </tr>
            </thead>
            <tbody>
            @{int index = 0;}
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                       
                        <input type='checkbox'  name="input[@index].IsSelected" id="chkApprovedRequests" value="@item.Input.IsSelected"/>
                    
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CommodityName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RequisitionNo)
                          
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QuanityInQtl)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrignWarehouse)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RegionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Zone)
                    </td>

                    <td>
                        @Html.DisplayFor(modleItem => item.RequisitionStatusName)
                    </td>
                    <td>
                          <input type='hidden'  name="input[@index].Number" id="txtRequisitionID" value="@item.Input.Number"/>
                        @*<input type="hidden" value="@item.Input.Number" name="@("input[" + index + "].Number")"  />*@
                    </td>


                 
                </tr>
                index++;
            }
</tbody>
        </table>
        </div>
   
}


<script>

    $(document).ready(function() {
        $("#kGrid").kendoGrid({
            
            sortable: true,
            Scrollable:true
            
        });
        
    });
</script>
@*@(Html.Kendo().Grid(Model).Name("Grid")
      .Columns(columns =>
                   {
                                           
                       columns.Bound(requisition => requisition.CommodityName);
                       columns.Bound(requisition => requisition.RequisitionNo);
                       columns.Bound(requisition => requisition.QuanityInQtl);
                       columns.Bound(requisition => requisition.OrignWarehouse);
                       columns.Bound(requisition => requisition.RegionName);
                       columns.Bound(requisition => requisition.Zone);
                       columns.Bound(requisition => requisition.RequisitionStatusName); 
                                      


                   } ).Selectable(selection=>selection.Mode(GridSelectionMode.Multiple))
                   .DataSource(datasource=>datasource.Server().Model(model=>model.Id(t=>t.RequisitionID)))
      .Pageable());*@

@*<script type="text/javascript">
    $(function () {
        var gridDataSource = new kendo.data.DataSource({
            transport: {
                read: '/TransportRequisition/Requisitions1'
            },
            pageSize: 2
        });

        var $kgrid = $("#kGrid");
        var grid = $("#kGrid").kendoGrid({
            dataSource: gridDataSource,
            pageable: true,
            columns: [
                { field: "check_row", title: " ", width: 30, template: "<input class='check_row' type='checkbox' />" },
                { field: "CommodityName", title: "Commodity", filterable: true, sortable: true, width: 300 },
                { field: "RequisitionNo", filterable: true, sortable: true },
            ],
            dataBound: function (e) {
                //Go Through Each visible row and add a data property with the unique ID from the dataset
                $(".k-grid-content tbody tr").each(function () {
                    var $tr = $(this);
                    var uid = $tr.attr("data-uid");
                    var data_entry = _.find(gridDataSource._data, function (data_source) {
                        return data_source.uid === uid;
                    });
                    $tr.addClass('kendo-data-row').attr('data-sympleTech-KendoGrid-rowid', data_entry.id);
                });

                //Mark any selected rows as selected (persists selections from page to page)
                var selectedRowIds = $kgrid.attr('data-sympleTech-KendoGrid-selected');
                if (selectedRowIds != null) {
                    var selectedRowIdArray = selectedRowIds.split(',');
                    var visibleRows = $kgrid.find('.kendo-data-row');
                    $(visibleRows).each(function () {
                        $row = $(this);
                        var rowID = $row.attr('data-sympleTech-KendoGrid-rowid');
                        if (_.contains(selectedRowIdArray, rowID)) {
                            $row.addClass('k-state-selected');
                            $row.find('.check_row').attr('checked', 'checked');
                        }
                    });
                }
            }
        });
    });

    $('.check_row').live('click', function (e) {
        var $kgrid = $("#kGrid");
        var $cb = $(this);

        //Get Current Selected Values
        var selectedVals = [];
        var selectedRowIds = $kgrid.attr('data-sympleTech-KendoGrid-selected');
        if (selectedRowIds != null) {
            selectedVals = selectedRowIds.split(',');
        }

        var $row = $cb.parents('.kendo-data-row').first();
        var rowId = $row.attr('data-sympleTech-KendoGrid-rowid');
        if ($cb.is(':checked')) {
            $row.addClass('k-state-selected');
            selectedVals.push(rowId);
        } else {
            $row.removeClass('k-state-selected');
            selectedVals = _.without(selectedVals, rowId);
        }

        //Set selected values to a custom data attribute on the grid
        $kgrid.attr('data-sympleTech-KendoGrid-selected', selectedVals);

        
    });

</script>

<div id="kGrid"></div>*@