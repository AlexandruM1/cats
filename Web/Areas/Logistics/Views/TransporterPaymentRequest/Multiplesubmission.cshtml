@using Cats.Helpers
@model List<Cats.Areas.Logistics.Models.TransporterPaymentRequestViewModel>
@{
    ViewBag.Title = Html.Translate("MultipleApproval");
    
}

@*<div class="modal-header" style="width: auto;height: 50px">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">@Html.Translate("Multiple Payment Request")</h3>
   
   
</div>*@

 @{
     if (ViewBag.Error != null)
     {
        
             <div class="modal-dialog" style="width: 500px;height: 200px">
                 <div class="modal-content">
                     <div class="modal-header">
                         <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                         <h4 class="modal-title">Confirmation</h4>
                     </div>
                     <div class="modal-body">
                         <p style="font-weight: bold">@ViewBag.Error</p>
                         <p style="font-weight: bold" class="text-warning"><small>@Html.Translate("All the payment requests have been approved")</small></p>
                     </div>
                     <div class="modal-footer">
                         <button type="button" class="btn btn-default" data-dismiss="modal">@Html.Translate("Close")</button>
                     </div>
                 </div>
             </div>
         
         
     }
     else
     {


         using (Html.BeginForm("Multiplesubmission", "TransporterPaymentRequest", new {transporterID = @ViewBag.TransporterID}, FormMethod.Post))
         {
             //@Html.Hidden("transporterID", @ViewBag.TransporterID)
             <div style="height: auto; overflow-y: scroll;">
                 <table  class="table table-striped table-bordered k-scrollable" >
        
                     <thead>     <th>@Html.Translate("Select")</th>
                         <th>@Html.Translate("Reference No")</th>
                         <th>@Html.Translate("Program")</th>
                         <th>@Html.Translate("Requisition")</th>
                         <th>@Html.Translate("Issue No")</th>
                         <th>@Html.Translate("G.R.N.")</th>
                         <th>@Html.Translate("Commodity")</th>
                         <th>@Html.Translate("Source")</th>
                         <th>@Html.Translate("Destination")</th>
                         <th>@Html.Translate("Dispatched Date")</th>
                         <th>@Html.Translate("Status")</th>
                   
             
                     </thead>
                     <tbody>
                         @*  @{ int index = 0; }*@
                         @for (int i = 0; i < Model.Count; i++)
                         {

                             <tr>
                                 @{ var sno = i + 1; }
                                 <td>@Html.CheckBox("transporterPaymentRequestViewModels[" + @i + "].Checked",
                                                    Model[i].Checked)</td>
                                 @*   <td>@sno</td>*@
                                 <td>@Html.Label(Model[i].ReferenceNo, new {@readonly = "readonly"})</td> 
                                 <td>@Html.Label(Model[i].Program.Name, new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].RequisitionNo, new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].GIN,
                                                 new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].GRN,
                                                 new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].Commodity,
                                                 new {@readonly = "readonly"})</td>
                                 @Html.Hidden("transporterPaymentRequestViewModels[" + @i + "].BusinessProcess.CurrentState.ParentBusinessProcessID",
                                              Model[i].BusinessProcess.CurrentState.ParentBusinessProcessID,
                                              new {@readonly = "readonly"})
                                 <td>@Html.Display(Model[i].Source, new {@readonly = "readonly"})</td> 
                                 <td>@Html.Label(Model[i].Destination, new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].DispatchDate, new {@readonly = "readonly"})</td>
                                 <td>@Html.Label(Model[i].BusinessProcess.CurrentState.BaseStateTemplate.Name, new {@readonly = "readonly"})</td>
                             </tr>

                         }
                     </tbody>
        
                 </table>
             </div> @* 
    <tr>*@
           @* <td colspan="3">*@



             <div>
                 <button class="btn btn-primary"  type="submit">@ViewBag.Status</button>
                 <a class="btn btn-primary"  data-dismiss="modal" aria-hidden="true" >@Html.Translate("Cancel")</a>
             </div>




     @*     </td>
        </tr>*@
         }
     }
 }
 