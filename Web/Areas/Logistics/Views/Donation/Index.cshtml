@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2>Index</h2>

@(Html.Kendo().Grid<Cats.Areas.Logistics.Models.ReceiptAllocationViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.CommodityName).Title("Commodity");
        columns.Bound(p => p.SINumber).Width(100);
        columns.Bound(p => p.AllocatedQuantity).Title("Allocated");
        columns.Bound(p => p.ReceivedQuantity).Title("Received");
        columns.Bound(p => p.Balance).Title("Balance");
       
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(160);
    })
    .ToolBar(toolbar => toolbar.Create())
    .ToolBar(toolbar=> toolbar.Save())
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.ReceiptAllocationID))
        .Create(update => update.Action("EditingInline_Create", "Grid"))
        .Read(read => read.Action("ReadReceiptAllocation", "Donation"))
        .Update(update => update.Action("EditingInline_Update", "Grid"))
        .Destroy(update => update.Action("EditingInline_Destroy", "Grid"))
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>
