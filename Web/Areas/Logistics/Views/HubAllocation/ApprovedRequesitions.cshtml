@using Cats.Services.Security
@model IList<Cats.Models.RequisitionViewModel>


@{
    
    var user = (UserIdentity)System.Web.HttpContext.Current.User.Identity;
    var unitPreference = user.Profile.PreferedWeightMeasurment;
}
@{
    ViewBag.Title = "ApprovedRequesitions";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
   
}

@section LeftBar
{
    @Html.Partial("_AllocationLeftBar")
}

<fieldset>
    <legend>
        Approved Requesitions
    </legend>
</fieldset>

<script>
    $(document).ready(function () {

        $('#frm').validate(
            {
                
                submitHandler: function (form) {
                    var rows = $("#kGrid").data("kendoGrid").dataSource.total();
                   
                    if (rows < 1) {
                       
                        var error = document.getElementById("Notification");
                        if (error.style.display == "none") {
                            error.style.display = "block";
                        }


                        return false;
                    } else form.submit();
                    return true;
                },

                
                
            });





    });
      </script>

<script>
  
    @{ var total = ViewData["Total"]; }

    $(document).ready(function () {
        var selectedIds = {};
        $("#kGrid").kendoGrid({
            
            groupable: true,
            scrollable: true,
            sortable: true,
            pageable: true,
            autoBind: true,
            dataSource: {
                pageSize:1
            }
            
          
            
            
        });
        

       
        

    });
    
</script>


@*<script>
    // this object will store all checked records
    var checked = {};

    function onLoad() {
        // handle the click event of all checkboxes
        $(this).delegate(":checkbox", "click", function () {
            // store the checked state of the record (this.value is set to the value of the  OrderID property of the data item)
            checked[this.value] = this.checked;
        });
    }

    function onRowDataBound(e) {
        if (checked[e.dataItem.i]) {
            // if the record was checked update the checked state of the checkbox
            $(e.row).find(":checkbox").attr("checked", true);
        }
    }
</script>*@


<div class="alert alert-block" id="Notification" style="display: none" >
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <h4>Error!</h4>
    No data to allocate!
</div>


@using (Html.BeginForm("hubAllocation", "HubAllocation", FormMethod.Post, new { name = "frm", id = "frm" }))
{
    
       
      <h5 align="right"> Metric: @unitPreference </h5>
       
    
    <div  class="k-content">
        <table  id="kGrid" >
            
            <thead>
                
                <tr>
                    
                    <th>
                        @Html.Label("Select Request")
                    </th>
                    <th>
                        @Html.Label("Commodity")
                    </th>
                    <th>
                        @Html.Label("Region")
                    </th>
                    <th>
                        @Html.Label("Zone")
                    </th>
       
                    <th>
                        @Html.Label("Requisition No")
                    </th>
                   
       
                    <th>
                        @Html.Label("Amount")
                    </th>
                
                    <th>
                        @Html.Label("Beneficiaries")
                    </th>
                    <th>
                        @Html.Label("Requisition ID")
                    </th>
        
                </tr>
            </thead>
             <tbody>
            @for(int i = 0;i < Model.Count;i++)

            {
               
                    <tr>
                        <td>
                            <input type='checkbox' name="IsChecked" id="chkApprovedRequests" value="@i"/>
            
                        </td> 
                        <td>
                            @Html.DisplayFor(m=>m[i].Commodity)
                            @Html.HiddenFor(m=>m[i].Commodity)
            
                        </td>
        
                        <td>
                            @Html.DisplayFor(m=>m[i].Region)
                            @Html.HiddenFor(m=>m[i].Region)
            
                        </td>
        
                        <td>
                            @Html.DisplayFor(m=>m[i].Zone)
                            @Html.HiddenFor(m=>m[i].Zone)
            
                        </td>
        
                        <td >
           
                            @Html.DisplayFor(m=>m[i].RequisitionNo)
                            @Html.HiddenFor(m=>m[i].RequisitionNo)
            
                        </td>
        
                       
           
                        <td>
                            @Html.DisplayFor(m=>m[i].Amount)
                            @Html.HiddenFor(m=>m[i].Amount)
            
                        </td>
                        <td>
                            @Html.DisplayFor(m=>m[i].BenficiaryNo)
                            @Html.HiddenFor(m=>m[i].BenficiaryNo)
            
                        </td>
                        <td>
                            @Html.DisplayFor(m=>m[i].RequisitionId)
                            @Html.HiddenFor(m=>m[i].RequisitionId)
            
                        </td>
                    </tr>
               
    
            }
 </tbody>
        </table>
    </div>
    <br />
    <button type="submit" class="btn btn-success">
  <i class="icon-user icon-white"></i> Assign hub
</button>
    
    
        }


