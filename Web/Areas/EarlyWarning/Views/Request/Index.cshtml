@using Cats.Areas.EarlyWarning.Models
@using Cats.Models.Constant
@using Kendo.Mvc.UI



@{
    ViewBag.Title = "Regional Relief Requests";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="well">
    <h4 class="page-header">Regional Monthly Requests</h4>
</div>
@section LeftBar
{


}
@*@using (Html.BeginForm())
{
    <div class="control-group">
        <label class="control-label">Year</label>
        <div class="controls">
            @Html.TextBox("year")
        </div>
    </div>

    <div class="control-group">
        <label class="control-label">Month</label>
        <div class="controls">
            @Html.DropDownList("month", (SelectList)ViewBag.Months)
        </div>
    </div>

    <div class="control-group">
        <div class="controls">
            <input type="submit" value="Filter" class="btn btn-primary" />
        </div>
    </div> 
}
@Html.ActionLink("New", "New", "Request")

@(Html.Kendo().Grid(Model).Name("requestgrid")
.Columns(columns =>
             {
                 columns.Bound(request => request.ReferenceNumber);
                 columns.Bound(request => request.RequestDateEt);
                 columns.Bound(request => request.Program);
                 columns.Bound(request => request.Round);
                 columns.Bound(request => request.Region);
                 columns.Bound(reqquest => reqquest.Year);
                 columns.Bound(request => request.Status).Template(


                     @<text>
@if (item.StatusID == (int)RegionalRequestStatus.Draft)
{
    @Html.ActionLink("Approve", "ApproveRequest", "Request", new { Area = "EarlyWarning", id = @item.RegionalRequestID })}
else
{
    @item.Status 
}
</text>);


             }).Pageable())
*@



@(Html.Kendo().Grid<RegionalRequestViewModel>()
    .Name("grid")
    .Columns(columns =>
                 {
                     columns.Bound(request => request.Region);
                     columns.Bound(request => request.Year);
                     columns.Bound(request => request.Month);
                     columns.Bound(request => request.Program);
                     columns.Bound(request => request.RequestDateEt);
                     columns.Bound(requst => requst.ReferenceNumber);
                     columns.Bound(request => request.Status).Template(


                         @<text>
@if (item.StatusID == (int)RegionalRequestStatus.Draft)
{
    @Html.ActionLink("Approve", "ApproveRequest", "Request", new { Area = "EarlyWarning", id = @item.RegionalRequestID })
}
else
{
    @item.Status
    @Html.ActionLink("Approve", "ApproveRequest", "Request", new { Area = "EarlyWarning", id = @item.RegionalRequestID })
}
</text>);
                     columns.Command(command =>
                                         {
                                             command.Edit().Text(" ");
                                             command.Destroy().Text(" ");
                                         });

                 })
    .ToolBar(toolbar =>


                     toolbar.Create()
                 )
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

            .Model(model =>
            {
                model.Id(p => p.RegionalRequestID);

                //  model.Field(r => r.Status).Editable(false);
                model.Field(r => r.RegionalRequestID).Editable(false);
                model.Field(r => r.StatusID).Editable(false).DefaultValue(1);
                model.Field(r => r.RequestDateEt).Editable(false);
            })
        .Create(update => update.Action("Request_Create", "Request"))
        .Read(read => read.Action("Request_Read", "Request"))
        .Update(update => update.Action("Request_Update", "Request"))
        .Destroy(update => update.Action("Request_Destroy", "Request"))
    ).Pageable()
)