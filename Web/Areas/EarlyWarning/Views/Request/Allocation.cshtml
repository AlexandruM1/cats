@using Cats.Areas.EarlyWarning.Models
@model RegionalRequestViewModel
@using Cats.Models
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Regional Relief Requests";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section Toolbar    {
     <a class="btn icon-reply" href="@Url.Action("Details", "Request", new { Area = "EarlyWarning", id = Model.RegionalRequestID })" data-buttontype="btn_back_to_list"></a>
}
<fieldset>
    <legend>
        Regional Request Resource Allocation
    </legend>
</fieldset>
  <div class="form-horizontal well">
  <table border="0" style="width: 80px;">
      <tr>
          <td style="width: 40%">
              <div class="control-label">
                  @Html.LabelFor(model => model.ReferenceNumber)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.ReferenceNumber,new {disabled=true})
              </div>
          </td>
          <td style="width: 40%">
              <div class="control-label">
                  @Html.LabelFor(model => model.Program)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.Program,new {disabled=true})
              </div>
          </td>
          <td class="span8" style="float: right;width:10%">
              <div style="float: right; margin-right: 200px;width: 200px">
    <div class="btn-group">
        <button class="btn">Action</button>
        @{
            
            <button class="btn dropdown-toggle " data-toggle="dropdown">
                <span class="caret"></span>
            </button>
           
        }
        <ul class="dropdown-menu">
            <li><a  href="#" >Save </a></li>
             <li><a  href="#" >Add Commodity </a></li>
               <li><a   href="#" >Return </a></li> 
        
        </ul>

    </div>
</div>
                
          </td>
      </tr>
      <tr>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.Region)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.Region,new {disabled=true})
              </div>
          </td>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.MonthName)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.MonthName,new {disabled=true})
              </div>
          </td>
      </tr>
      <tr>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.RequestDate)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.RequestDate,new {disabled=true})
              </div>
          </td>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.Year)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.Year,new {disabled=true})
              </div>
          </td>
      </tr>
       <tr>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.Ration)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.Ration,new {disabled=true})
              </div>
          </td>
          <td style="width: 50%">
              <div class="control-label">
                  @Html.LabelFor(model => model.Status)
              </div>
              <div class="controls">
                  @Html.TextBoxFor(model=>model.Status,new {disabled=true})
              </div>
          </td>
      </tr>
 </table>
</div>

@section LeftBar
{
    @Html.Partial("_RegionalRequestLeftBar")
   
}
<h5 class="well-small">Commodities Allocation</h5>
<div style="width: 400px">
@(Html.Kendo().Grid<RequestDetailCommodityViewModel>()
      .Name("commodityGrid")
          .Columns(columns =>
          {
              columns.ForeignKey(p => p.CommodityID, (IEnumerable<Commodity>)ViewData["AvailableCommodities"], "CommodityID", "Name");
              columns.Command(command => command.Destroy()).Width(100);
          }

      )
            .ToolBar(toolbar =>
                         {
                             toolbar.Save();
                             toolbar.Create();
                         })
             .Editable(edit => edit.Mode(GridEditMode.InCell))
             .Pageable()
            .Selectable(t => t.Mode(GridSelectionMode.Single))
             .Navigatable()
              .DataSource(dataSource => dataSource
             .Ajax()
            .PageSize(5)
            
            .Model(model => model.Id(p => p.CommodityID))
            .Create(update => update.Action("Commodity_Create", "Request", new { id = ViewBag.RequestID }))
            .Read(read => read.Action("Commodity_Read", "Request", new { id = ViewBag.RequestID }))
            .Update(update => update.Action("Commodity_Update", "Request"))
            .Destroy(update => update.Action("Commodity_Destroy", "Request", new { id = ViewBag.RequestID })))
      )
</div>


<h5 class="well-small">Number of Beneficiaries</h5>

@(Html.Kendo().Grid<RegionalRequestDetailViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Template(t => { }).Title("No").ClientTemplate("#= renderNumber(data) #").Width(30);
          columns.Bound(p => p.Zone).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
          columns.Bound(p => p.Woreda).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
          columns.Bound(p => p.FDP).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
          columns.Bound(p => p.Beneficiaries).Width(60).HtmlAttributes(new {align="right"});
          columns.Bound(p => p.PlannedBeneficiaries).Width(60).HtmlAttributes(new { align = "right" });
          columns.Command(p => p.Custom("Delete").Click("onDelete")).Width(50);

      })
      .ToolBar(toolbar => toolbar.Save())
      .Editable(editable => editable.Mode(GridEditMode.InCell))
        //.Events(events => events.DataBound("onDataBound"))
      .Scrollable()
      .Selectable(t => t.Mode(GridSelectionMode.Single))
      .Navigatable()
      .HtmlAttributes(new { style = "height:430px;" })
      .Events(events => events.DataBound("onDataBound"))
      .DataSource(dataSource => dataSource
                                    .Ajax()
                                   
                                    .Model(model =>
                                               {
                                                   model.Id(p => p.RegionalRequestDetailID);
                                                   model.Field(detail => detail.FDP).Editable(false);
                                                   model.Field(detail => detail.Zone).Editable(false);
                                                   model.Field(detail => detail.Woreda).Editable(false);
                                                   model.Field(detail => detail.PlannedBeneficiaries).Editable(false);
                                               })
                                    .Create(update => update.Action("Allocation_Create", "Request"))

                                    .Read(read => read.Action("Allocation_Read", "Request", new { id = ViewBag.RequestID }))
                                    .Update(update => update.Action("Allocation_Update", "Request"))
                                    .Destroy(update => update.Action("Allocation_Destroy", "Request"))
      ))
<script type="text/javascript">

    function onDataBound(e) {
        //alert("");
        check_planned();
        var grid = $("#grid").data("kendoGrid");
        $(grid.tbody).on("change", "td", function (e) {
           
            var row = $(this).closest("tr");
            var rowIdx = $("tr", grid.tbody).index(row);
            update_ui(rowIdx, row);
        }
            );
    }
    function update_ui(rowIdx,row) {
        var grid = $("#grid").data("kendoGrid");
        var firstItem = $('#grid').data().kendoGrid.dataSource.data()[rowIdx];
        var plannedBeneficiaries = firstItem.get('PlannedBeneficiaries');
        var beneficiaries = firstItem.get('Beneficiaries');
        
        if (plannedBeneficiaries < beneficiaries) {
            row.addClass("surplus");
        } else {
            row.removeClass("surplus");
        }
    }
    function check_planned() {
        var grid = $("#grid").data("kendoGrid");
        var rowIdx = 0;
        $(grid.tbody).find("tr").each(function () {
            //$(this).addClass("surplus");
            update_ui(rowIdx, $(this));
            rowIdx++;
        });
    }
    
    
    function onDelete(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("DeleteFDP", "Request")" + "/" + dataItem.RegionalRequestDetailID;         
    }
</script>
<style>
    .surplus * {
        color: red;
    }
    .surplus {
        color: red;
    }
</style>