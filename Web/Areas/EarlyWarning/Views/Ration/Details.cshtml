@using Cats.Areas.EarlyWarning.Models
@using Cats.Helpers
@using Cats.Models
@using Kendo.Mvc.UI
@model RationViewModel

@{

    ViewBag.Title = "Beneficiary Ration";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div id='dialogDiv' class='modal hide fade in'>
    <div id='dialogContent'></div>
</div>
<h4 class="well">Ration Details</h4>

@{
    var user = UserAccountHelper.GetUser(HttpContext.Current.User.Identity.Name);
    var cal = user.Calendar; 
}


<div>
    @Html.DisplayNameFor(model => model.ReferenceNumber):
    @Html.DisplayFor(model => model.ReferenceNumber)

    @Html.DisplayNameFor(model => model.CreatedBy)
    @Html.DisplayFor(model => model.CreatedBy)
    @if (cal.ToLower() == "ec")
    {
        @Html.DisplayNameFor(model => model.CreatedDateEC)<b>:</b>
        @Html.DisplayFor(model => model.CreatedDateEC)
    }
    else
    {
        @Html.DisplayNameFor(model => model.CreatedDate)<b>:</b>
        @Html.DisplayFor(model => model.CreatedDate)
    }


    @Html.DisplayNameFor(model => model.IsDefaultRation):
    @Html.DisplayFor(model => model.IsDefaultRation)


    <p>
        
 
        <a href="@Url.Action("Index", "Ration", new { Area = "EarlyWarning" })"><i class="icon-chevron-left"></i> Back </a>
        <a id="btnCreate" href="@Url.Action("Edit", "Ration", new { Area = "EarlyWarning", id = Model.RationID })"><i class="icon-edit"></i> Edit </a>
    </p>

</div>




@(Html.Kendo().Grid<RationDetailViewModel>()
      .Name("grid")
      .Columns(columns =>
                   {
                       columns.Bound(p => p.CommodityID).Width(100).Visible(false);
                       columns.Bound(p => p.Commodity).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
                       columns.Bound(p => p.RationID).Width(100).Visible(false);
                       columns.Bound(p => p.Amount).Width(100);
                       //columns.Command(command =>
                       //                    {
                       //                        //command.Destroy();
                       //                        //command.Edit();
                       //                    });
                   })
          .ToolBar(toolbar =>
          {
              toolbar.Save();
              //toolbar.Create();
          })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Pageable()
      .Sortable()
      .Scrollable()
      .Selectable(t => t.Mode(GridSelectionMode.Single))
      .Navigatable()
      .HtmlAttributes(new { style = "height:430px;" })
      .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    .Model(

        model =>
        {
            model.Id(p => p.RationID);
            model.Field(ration => ration.Commodity).Editable(false);
        }
    )
                                    .Create(update => update.Action("RationDetail_Create", "Ration"))
                                    .Read(read => read.Action("RationDetail_Read", "Ration",new {id=Model.RationID}))
                                    .Update(update => update.Action("RationDetail_Update", "Ration"))
                                    .Destroy(update => update.Action("RationDetail_Destroy", "Ration"))
      ))

@section Scripts
{
   
}
<script type="text/javascript">
    
    $(function () {

        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });

        $('#btnCreate').click(function () {
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    });

    function bindForm(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#dialogDiv').modal('hide');
                        // Refresh:
                        // location.reload();
                    } else {
                        $('#dialogContent').html(result);
                        bindForm();
                    }
                }
            });
            return false;
        });
    }

</script>