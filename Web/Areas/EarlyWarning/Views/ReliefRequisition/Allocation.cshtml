@using Cats.Areas.EarlyWarning.Models
@model Cats.Areas.EarlyWarning.Models.ReliefRequisitionViewModel
@using Cats.Services.Security
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";    
}
@{
    
    var user = (UserIdentity)System.Web.HttpContext.Current.User.Identity;
    var unit = user.Profile.PreferedWeightMeasurment;
}

<h5 class="page-header">Monthly   @Html.DisplayFor(model => model.Program) Requisition Resource Allocation
        
</h5>

<div class="row-fluid">
    <div>
        <div class="form-horizontal">
            <table class="table-condensed">
                <tr>
                    <td>

                        <p>
                            <b>@Html.DisplayNameFor(model => model.RequisitionNo) :</b>
                        @Html.DisplayFor(model => model.RequisitionNo)


                    </td>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.Region)
                                :</b>
                        @Html.DisplayFor(model => model.Region)

                    </td>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.Zone)
                                :</b>
                            @Html.DisplayFor(model => model.Zone)
                        </p>
                    </td>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.Commodity)
                                :</b>
                            @Html.DisplayFor(model => model.Commodity)
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.Round)
                                :</b>
                            @Html.DisplayFor(model => model.Round)
                        </p>
                    </td>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.RequestedDateEt)
                                :</b>
                            @Html.DisplayFor(model => model.RequestedDateEt)
                        </p>
                    </td>
                    <td>
                        <p>
                            <b>@Html.DisplayNameFor(model => model.Program)
                                :</b>
                            @Html.DisplayFor(model => model.Program)
                        </p>
                    </td>
                    <td>
                        <p>
                            <b>Status
                                   :</b>
                            @Html.DisplayFor(model => model.Status)
                        </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <table>
                            <tr>
                                <td><a href="@Url.Action("Index", "ReliefRequisition", new { Area = "EarlyWarning" })"><i class="icon-chevron-left"></i>Back</a>


                                </td>
                                <td>
                                   @if(Model.StatusID == (int)Cats.Models.Constant.ReliefRequisitionStatus.Draft)
                                     { 
                                        @Html.ActionLink("Edit", "Edit", new { id = Model.RequisitionID })
        
                                     }
                                    
                                </td>
                                <td>
                                    @if(Model.StatusID == (int)Cats.Models.Constant.ReliefRequisitionStatus.Draft)
                                     {  @Html.ActionLink("Approve", "SendToLogistics", new { id = Model.RequisitionID }) 
        
                                     }
                                   
                                </td>
                                   
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

        </div>
    </div>

</div>

@section LeftBar
{
    @Html.Partial("_RequistionsLeftBar")

}
<div style="color: lightgray"></div>


@(Html.Kendo().Grid<ReliefRequisitionDetailViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Template(t => { }).Title("No").ClientTemplate("#= renderNumber(data) #").Width(50);
        columns.Bound(p => p.Zone).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
        columns.Bound(p => p.Woreda).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
        columns.Bound(p => p.FDP).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
        columns.Bound(p => p.Donor).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
        columns.Bound(p => p.Commodity).Title("Commodity In " + @unit).Width(100).HtmlAttributes(new { style = "background-color:lightgray" });
        columns.Bound(p => p.BenficiaryNo).Width(100).HtmlAttributes(new { align = "right" }).Format("{0:n0}");
        columns.Bound(p => p.Amount).Width(100).HtmlAttributes(new { align = "right" }).Format("{0:n2}");
    })
    .ToolBar(toolbar => toolbar.Save())
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
   // .Groupable()
    .Sortable()
    .Navigatable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
     .Events(ev => ev.DataBound("resetRowNumber"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        //.Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.RequisitionDetailID);
                model.Field(detail => detail.FDP).Editable(false);
                model.Field(detail => detail.Zone).Editable(false);
                model.Field(detail => detail.Donor).Editable(false);
                model.Field(detail => detail.Woreda).Editable(false);
                model.Field(detail => detail.Commodity).Editable(false);
            })
        .Create(update => update.Action("Allocation_Create", "ReliefRequisition"))
        .Read(read => read.Action("Allocation_Read", "ReliefRequisition", new { id = Model.RequisitionID }))
        .Update(update => update.Action("Allocation_Update", "ReliefRequisition"))
        .Destroy(update => update.Action("Allocation_Destroy", "ReliefRequisition"))
    )
)

