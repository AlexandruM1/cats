@using Cats.Models.Constant
@using Cats.Models.ViewModels
@using Kendo.Mvc.UI
@model IEnumerable<Cats.Areas.EarlyWarning.Models.ReliefRequisitionViewModel>

@{
    ViewBag.Title = "Requistions";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section LeftBar
{
    @Html.Partial("_RequistionsLeftBar")
}
<h2 class="well">Requistions</h2>
@(Html.Kendo().Grid(Model).Name("Grid").Columns(columns =>
                                       {
                                           columns.Bound(requisition => requisition.RequisitionNo);
                                           columns.Bound(requisition => requisition.Commodity);
                                           columns.Bound(requisition => requisition.Region);
                                           columns.Bound(requisition => requisition.Zone);
                                           columns.Bound(requisition => requisition.Round);
                                           columns.Bound(requisiton => requisiton.Program);
                                           columns.Bound(requisition => requisition.RequestedDateEt);
                                           columns.Bound(requisition => requisition.Status).Template(


                     @<text>
@if (item.StatusID == (int)ReliefRequisitionStatus.Draft)
{
    <a  href="@Url.Action("Edit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-edit"></i></a>
   <a href="@Url.Action("SendToLogistics", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-ok"></i></a>
    <a  href="@Url.Action("RequistionDetailEdit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-pencil"></i></a>
   
  
}
else
{
    @item.Status 
}
</text>);

                                       }))

@*<table class="table table-bordered table-condensed table-striped">
    <tr>
        
        <th>
            @Html.DisplayNameFor(model => model.RequisitionNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CommodityID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegionID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZoneID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Round)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProgramID)
        </th>
        
      
        <th>
            @Html.DisplayNameFor(model => model.RequestedDate)
        </th>
      
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
         <td>
                <a href="@Url.Action("RequistionDetailEdit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })">@Html.DisplayFor(modelItem => item.RequisitionNo)</a>
            </td>
        
         <td>
            @Html.DisplayFor(modelItem => item.Commodity.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AdminUnit1.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AdminUnit.Name )
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Round)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.Program.Name)
        </td>
      
        <td>
            @Html.DisplayFor(modelItem => item.RequestedDate,new {@class="cats-datepicker"})
        </td>
      
        <td>
           @{
               //var statusName = item.Status.ToString();
        var showme = item.Status == 1 ? "" : "hidden";
                }
               @{
            string status=string.Empty;

            switch (item.Status)
            {
                case (int)ReliefRequisitionStatus.Draft:
                    status = "Draft";
                    break;
                case (int)ReliefRequisitionStatus.Approved:
                    status = "Approved";
                    break;
                case (int)ReliefRequisitionStatus.HubAssigned:
                    status = "HubAssigned";
                    break;
                case (int)ReliefRequisitionStatus.ProjectCodeAssigned:
                    status = "ProjectCodeAssigned";
                    break;
                case (int)ReliefRequisitionStatus.TransportOrderCreated:
                    status = "TransportOrderCreated";
                    break;
                case (int)ReliefRequisitionStatus.TransportRequisitionCreated:
                    status = "TransportRequisitionCreated";
                    break;
            }
                
                    }
                    @status
        </td>
        
        <td>
           
             <a class="btn btn-warning @showme" href="@Url.Action("Edit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })">Edit</a>
            <a class="btn btn-success @showme" href="@Url.Action("SendToLogistics", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })">Send</a>
        </td>
    </tr>
}

</table>*@
