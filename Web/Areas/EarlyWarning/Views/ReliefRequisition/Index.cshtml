
@using Cats.Helpers
@using Cats.Models.Constant
@using Kendo.Mvc.UI


@{
    ViewBag.Title = "Requistions";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var user = UserAccountHelper.GetUser(HttpContext.Current.User.Identity.Name);
}

@section LeftBar
{
    @Html.Partial("_RequistionsLeftBar")

}
@section Toolbar
{
    
}


<h4 class="page-header">Requistions</h4>

@(Html.Kendo().Grid<Cats.Areas.EarlyWarning.Models.ReliefRequisitionViewModel>().Name("Grid").Columns(columns =>
{
    columns.Template(t => { }).Title("No").ClientTemplate("#= renderNumber(data) #").Width(50);
    columns.Bound(requisition => requisition.RequisitionNo).ClientTemplate("<a href='" + Url.Action("Allocation", "ReliefRequisition", new { id = "#=RequisitionID#" }) + " '>#=RequisitionNo#</a>  ");
    columns.Bound(requisition => requisition.Commodity);
    columns.Bound(requisition => requisition.Region);
    columns.Bound(requisition => requisition.Zone);
    columns.Bound(requisition => requisition.MonthRound).Title("Round/Month");
    columns.Bound(requisiton => requisiton.Program);
    columns.Bound(t => t.RequestedDateEt).HeaderHtmlAttributes(new { @class = "cats-date-pref-grid" }).Width(160);
    
    columns.Bound(requisition => requisition.Status).Template(


@<text>
@if (item.StatusID == (int)ReliefRequisitionStatus.Draft)
{
  
    <a  href="@Url.Action("Edit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-edit"></i></a>
    <a href="@Url.Action("SendToLogistics", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-ok"></i></a>
    <a  href="@Url.Action("RequistionDetailEdit", "ReliefRequisition", new { Area = "EarlyWarning", id = item.RequisitionID })"><i class="icon-pencil"></i></a>
   
  
}
else
{
    @item.Status 
}
</text>);
                     //columns.Command(command =>
                     //                    {
                     //                        command.Edit().Text(" ");
                     //                        command.Destroy().Text(" ");
                     //                    }).Width(60);

                 })
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable(t=>t.PageSizes(new int[]{10,30,50}))
    .Groupable()
    .Sortable()
   .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .Events(ev => ev.DataBound("resetRowNumber"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)

            .Model(model =>
            {
                model.Id(p => p.RegionalRequestID);

                //  model.Field(r => r.Status).Editable(false);
                model.Field(r => r.Commodity).Editable(false);
                model.Field(r => r.Region).Editable(false);
                model.Field(r => r.RequestedDateEt).Editable(false);
                model.Field(r => r.Region).Editable(false);
                model.Field(r => r.Zone).Editable(false);
                model.Field(r => r.Round).Editable(false);
                model.Field(r => r.Program).Editable(false);
                model.Field(r => r.Status).Editable(false);
            })
    
        .Read(read => read.Action("Requisition_Read", "ReliefRequisition",new{id=ViewBag.Status}))
        .Update(update => update.Action("Requisition_Update", "ReliefRequisition"))
        .Destroy(update => update.Action("Requisition_Destroy", "ReliefRequisition"))
    ).Pageable()
)

