@using Cats.Helpers
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@model IEnumerable<Cats.Areas.GiftCertificate.Models.GiftCertificateViewModel>

@{
   
    
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var user = UserAccountHelper.GetUser(HttpContext.Current.User.Identity.Name);
  
}
@section LeftBar
{
@Html.Partial("_giftLeftBar")}

    <h4>
        @Translator.Translate(ViewBag.Title)</h4>
@section Toolbar
{
    <a data-buttontype="btn_new_record"  class="btn toolbar-btn " href="@Url.Action("Create", "GiftCertificate")"></a>
}
 
      
  <div id='dialogDiv' class='modal hide fade in'>
    <div id='dialogContent'></div>
</div>

<div>

    @(Html.Kendo().Grid(Model).Name("GiftCertificateGrid")
    .Columns(col =>
    {

        col.Template(
             @<text>
                 
                        
    @if(item.StatusID ==1)
    {
         <a href="@Url.Action("Edit", new { id = item.GiftCertificateID })" ><i class="icon-edit-sign"></i> </a>
       
         <a id="btnApprove" href="@Url.Action("Approved", "GiftCertificate", new { id = item.GiftCertificateID })"><i class="icon-plus"></i>Approve</a>
    }
    else
    {
        <a class="btn-Print-gift" href="@Url.Action("GenerateTemplate", new { id = item.GiftCertificateID })"  ><i class="icon-print"></i> </a>
    }
    </text>

            ).Title("");

   
         col.Bound(gc => gc.Donor).Title(Translator.Translate("Donor"));
         col.Template(@<text>
    @item.GiftDate.ToCTSPreferedDateFormat(user.LanguageCode)
    </text>).Title(Translator.Translate("Gift Date"));
        col.Bound(gc => gc.SINumber).Title(Translator.Translate("SI Number"));
        col.Bound(gc => gc.ReferenceNo).Title(Translator.Translate("Reference No"));
        col.Bound(gc => gc.DeclarationNumber).Title(Translator.Translate("Declaration Number"));
    }
        ).DetailTemplate(detail=>
            Html.Kendo().Grid( detail.GiftCertificateDetails ).Name("GCDetails" + detail.GiftCertificateID)
            .Columns(c =>
                         {
                             c.Bound(com => com.CommodityName);
                c.Bound(gc => gc.WeightInMT).Format("{0:N3}").HtmlAttributes(new { align = "right" }).Title(Translator.Translate("Weight in MT"));
                c.Bound(gc => gc.EstimatedPrice).Format("{0:N3}").HtmlAttributes(new { align = "right" }).Title(Translator.Translate("Est. Price"));
                c.Bound(gc => gc.EstimatedTax).Format("{0:N3}").HtmlAttributes(new { align = "right" }).Title(Translator.Translate("Est. Tax"));
                c.Bound(gc => gc.FundSource).Title(Translator.Translate("Fund Source"));
            })
        ).Filterable().Sortable().Pageable().Sortable()
   )
</div>
<script type="text/javascript">
    $(function () {

        //Optional: turn the chache off
        $.ajaxSetup({ cache: false });

        $('#btnApprove').click(function () {
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });
        $('.btn-Print-gift').click(function () {
            $('#dialogContent').load(this.href, function () {
                $('#dialogDiv').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                //bindForm(this);
            });
            return false;
        });
    });

  
</script>
