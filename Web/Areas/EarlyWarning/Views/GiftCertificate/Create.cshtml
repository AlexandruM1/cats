@model Cats.Areas.GiftCertificate.Models.GiftCertificateViewModel
@using Cats.Helpers
@using Kendo.Mvc.UI
@using LanguageHelpers.Localization
@{
    ViewBag.Title = Translator.Translate("Gift Certificate");
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@section Toolbar
{
    <a class="btn toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_create_gift"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_cancel" href="@Url.Action("Index", "GiftCertificate")" title="Cancel"></a>
}
<h4 class="page-header">@Html.Translate("New Gift Certificate")</h4>

@{ViewBag.IsInEditMode = false; }

@using (Html.BeginForm("Create", "GiftCertificate", FormMethod.Post, new { id = "frm_create_gift", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
           
    // @Html.HiddenFor(model => model.GiftCertificateID)
    @Html.HiddenFor(model => model.rowCount)

          
    
    
      
  
    <div class="form-horizontal row-fluid">


        <div class="span6" style="vertical-align: top">
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.GiftDate, Translator.Translate("Gift Date"), new { @class = "cats-date-pref" })
                </div>
                <div class="controls">

                    @Html.TextBoxFor(model => model.GiftDate, new { @class = "cats-datepicker2" })

                    @Html.ValidationMessageFor(model => model.GiftDate)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.DModeOfTransport, Translator.Translate("Mode Of transport"))
                </div>
                <div class="controls">

                    @Html.DropDownList("DModeOfTransport", string.Empty)
                    @Html.ValidationMessageFor(model => model.DModeOfTransport)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.ProgramID, Translator.Translate("Program"))
                </div>
                <div class="controls">

                    @Html.DropDownList("ProgramID", string.Empty)
                    @Html.ValidationMessageFor(model => model.ProgramID)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.DonorID, Translator.Translate("Donor"))
                </div>
                <div class="controls">

                    @Html.DropDownList("DonorID", string.Empty)
                    @Html.ValidationMessageFor(model => model.DonorID)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.DeclarationNumber)
                </div>
                <div class="controls">

                    @Html.TextBoxFor(model => model.DeclarationNumber)

                    @Html.ValidationMessageFor(model => model.DeclarationNumber)

                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.CommodityTypeID, Translator.Translate("Commodity Type"))
                </div>
                <div class="controls">

                    @Html.DropDownList("CommodityTypeID", string.Empty)

                    @Html.ValidationMessageFor(model => model.CommodityTypeID)

                </div>
            </div>
        </div>
        <div class="span6" style="vertical-align: top">
            <div class="control-group">
                <div class="control-label">

                    @Html.LabelFor(model => model.SINumber, Translator.Translate("SI/Batch Number"))
                    @*<input type="text" name="names" value="" id="typeahead" data-provide="typeahead" />*@
                </div>
                <div class="controls">
                    @*<input type="text" id="siNumber" placeholder="Type SINumber" />*@
                    @*@(Html.Kendo().AutoComplete()
      .Name("siAutoComplete")
      .DataTextField("Value") //Specifies which property of the Product to be used by the autocomplete.
      .DataSource(source =>
      {
              source.Read(read =>
             {
                 read.Action("AutoCompleteSiNumber", "GiftCertificate")
                          .Data("onAdditionalData");
             });
      })
)*@
                    @(Html.Kendo().AutoComplete()
          .Name("SINumber")
          .HtmlAttributes(new { style = "width:215px;" })
          .Filter("startswith")
          .Placeholder("Enter or Select SINumber...")
          .DataSource(source=>source.Read(read=>read.Action("AutoCompleteSiNumber","GiftCertificate").Data("onAdditionalData")).ServerFiltering(true))
          //.BindTo(new string[] {
          //      "123/456",
          //      "245/254",
          //      "857/458",
          //      "1254",
          //      "02102",
          //      "002547",
          //      "12354",
          //      "0123456",
          //      "004587",
          //      "00789654",
          //      "1235647",
          //      "963258"
          //})
          //.Separator(", ")
    )


                    @* @Html.TextBoxFor(model => model.SINumber)*@
                    @Html.ValidationMessageFor(model => model.SINumber)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.PortName, Translator.Translate("Port Name"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(model => model.PortName)
                    @Html.ValidationMessageFor(model => model.PortName)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.ReferenceNo, Translator.Translate("Reference Number"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(model => model.ReferenceNo)
                    @Html.ValidationMessageFor(model => model.ReferenceNo)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.Vessel, Translator.Translate("Vessel"))
                </div>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Vessel)
                    @Html.ValidationMessageFor(model => model.Vessel)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(model => model.ETA, Translator.Translate("ETA"), new { @class = "cats-date-pref" })
                </div>

                <div class="controls">

                    @Html.TextBoxFor(model => model.ETA, new { @class = " cats-datepicker2" })

                    @Html.ValidationMessageFor(model => model.ETA)
                </div>
            </div>
        </div>


    </div>
}
<script type="text/javascript">
    function onAdditionalData(e) {
       // var filterValue = e.filter.filters[0].value;
        //alert($("#SINumber").val());
       // alert(filterValue);
        return {
            term: $("#SINumber").val()
            //term:filterValue
        };
    }
</script>
@*<script>
            $(document).ready(function() {
                $("#sites").kendoAutoComplete({
                    placeholder: "Enter site ...",
                    dataTextField: "SiteName",
                    filter: "startswith",
                    minLength: 3,
                    dataSource: {
                        type: "json",
                        serverFiltering: true,
                        serverPaging: true,
                        pageSize: 20,
                        transport: {
                            read:
                                {
                                    url: '@Url.Action("AutoCompleteSiNumber", "GiftCertificate")'
                                }, //read
                            parameterMap: function() {// send value of autocomplete as the "startsWith" parameter
                                        return { 
                                            term: $("#sites").data("kendoAutoComplete").value()
                                        };
                            }
                        } //transport
                    } //datasource
                }); //kendoAutoComplete
            }); //DocumentReady
        </script>*@
@*<script type="text/javascript">
    $(document).ready(function () {
        $("#siNumber").autocomplete({
            
            source: function (request, response) {
                $.ajax({
                    url:'@Url.Action("AutoCompleteSiNumber", "GiftCertificate")',
                    type: "GET",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        alert("here");
                        response($.map(data, function (item) {
                            return { label: item.Value, value: item.Value };
                        }))

                    }
                })
            },
            //messages: {
            //    noResults: "", results: ""
            //}
        });
    })
</script>*@
@*<script type="text/javascript">
    $(function () {
        $("input#siNumber").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("AutoCompleteSiNumber", "GiftCertificate")', type: "POST", dataType: "json",
                    data: { searchTerm: request.term, maxResults: 10 },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Value,
                                value: item.Value
                            }
                        }))
                    }
                })
            },

        });
    });
</script>*@
@*<script>
    function onAdditionalData() {
        return {
            text: $("#siAutoComplete").val()
        };
    }
</script>*@


