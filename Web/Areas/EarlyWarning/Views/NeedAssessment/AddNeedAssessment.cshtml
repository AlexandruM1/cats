@using LanguageHelpers.Localization
@using Cats.Helpers

@model Cats.Models.NeedAssessment
@{
    ViewBag.Title = "AddNeedAssessment";
    //Layout = "~/Views/Shared/_MainLayout.cshtml";  
}
 @*@section Toolbar
{
    <a class="btn toolbar-btn " data-buttontype="btn_save" data-submittedform="frm_add_region"></a>
    <a class="btn toolbar-btn " data-buttontype="btn_cancel" href="@Url.Action("Index", "NeedAssessment")" title="save"></a>
}*@
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">@Html.Translate("Add Need Assessment")</h3>
</div>

@using (Html.BeginForm("AddNeedAssessment", "NeedAssessment", FormMethod.Post, new { @class = "modal-form"}))
{

    @Html.HiddenFor(m => m.PlanID)
    <div class="modal-body">
        <div class="form-horizontal">
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(m => m.Season)
                </div>
                <div class="controls">
                    @Html.DropDownList("SeasonID", ViewBag.Season as SelectList, new {id = "Season"})
                    @Html.ValidationMessageFor(model => model.Season)
                </div>
              
            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.LabelFor(m => m.Region)
                </div>
                <div class="controls">
                    @Html.DropDownList("RegionID", ViewBag.Regions as SelectList, new {id = "Region"})
                    @Html.ValidationMessageFor(model => model.Region)
                </div>

            </div>
            <div class="control-group">
                <div class="control-label">
                    @Html.Label(Html.Translate("Assessment Type"))
                </div>
                <div class="controls">
                    @Html.DropDownList("TypeOfNeedID", ViewBag.TypeOfNeed as SelectList, new {id = "TypeOfNeed"})
                    @Html.ValidationMessageFor(model => model.TypeOfNeedAssessment1.TypeOfNeedAssessmentID)
                </div>

            </div>

        </div>
    </div>

    <div class="modal-footer"> <button class="btn btn-primary" type="submit">Save</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
    </div>
}
    @* @Html.HiddenFor(m=>m.PlanID)
        <div class="control-group form-horizontal well">
            <div class="row">
                <div class="span6">
                    <div class="control-group">
                        <div class="control-label">
                            @Html.Label(Html.Translate("Assessment Name"))
                        </div>
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Plan.PlanName, new {Disabled = true})
                            @Html.ValidationMessageFor(m => m.Plan.PlanName)
                        </div>
                    </div>
                </div>

                <div class="span6">
                    <div class="control-group">
                        <div class="control-label">
                            @Html.LabelFor(m => m.Season)
                        </div>
                        <div class="controls">
                            @Html.DropDownList("SeasonID", ViewBag.Season as SelectList, new { id = "Season" })
                            @Html.ValidationMessageFor(model => model.Season)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span6">
                    <div class="control-group">
                        <div class="control-label">
                            @Html.LabelFor(m => m.Region)
                        </div>
                        <div class="controls">
                            @Html.DropDownList("RegionID", ViewBag.Regions as SelectList, new { id = "Region" })
                            @Html.ValidationMessageFor(model => model.Region)
                        </div>

                    </div>
                </div>

                <div class="span4">
                    <div class="control-group">
                        <div class="control-label">
                            @Html.Label(Html.Translate("Assessment Type"))
                        </div>
                        <div class="controls">
                            @Html.DropDownList("TypeOfNeedID", ViewBag.TypeOfNeed as SelectList, new { id = "TypeOfNeed" })
                            @Html.ValidationMessageFor(model => model.TypeOfNeedAssessment1.TypeOfNeedAssessmentID)
                        </div>

                    </div>
                </div>
            </div>
        </div>
         <div class="modal-footer"> <button class="btn btn-primary" type="submit">Save</button>
            <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
        </div>
    }*@
@*@(Html.Kendo().Grid<Cats.Models.NeedAssessmentHeaderViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.RegionName).Title("Region");
            columns.Bound(p => p.SeasonName).Visible(true).Width(100).Title("Season");
            columns.Bound(p => p.Date).Title(Html.Translate("Need Assessment Created Date")).HeaderHtmlAttributes(new {@class="cats-date-pref-grid", style = "overflow: visible; white-space: normal;", title = "Need Assessment Created Date" });
            columns.Bound(p => p.NeedACreaterName).Width(100).Title("Created By").HeaderHtmlAttributes(new { style = "overflow: visible; white-space: normal;", title = "Created By" });
        })
        .HtmlAttributes(new { style = "height: 300px" })
        .Sortable()
        .Scrollable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Model(model => model.Id(p => p.NeedAID))
            .Read(read=>read.Action("PlannedNeedAssessmentInfo_Read","NeedAssessment",new {id=Model.PlanID}))
        )
    )*@
