@using Cats.Areas.EarlyWarning.Models
@using Cats.Helpers
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
@{
    var user = UserAccountHelper.GetUser(HttpContext.Current.User.Identity.Name);
    var cal = user.Calendar; 
}

@section LeftBar
{
   @Html.Partial("_NeedAssessmentPartial");
}

<fieldset>
    <legend>
        Beneficiary numbers and duration of assisstance
    </legend>
</fieldset>

@{var record = 0;}

@(Html.Kendo().Grid<NeedAssessmentViewModel>()
  
    .Name("NA").Columns(columns =>
                            {

                                columns.Template(t => { }).Title("No").ClientTemplate("#= renderNumber(data) #").Width(50);
                                columns.ForeignKey(p => p.Zone, (System.Collections.IEnumerable)ViewData["zone"], "AdminUnitID", "Name").Width(120);
                                columns.ForeignKey(p => p.District, (System.Collections.IEnumerable)ViewData["woreda"], "AdminUnitID", "Name").Width(120);;
                                
                                
                                columns.Bound(p => p.VPoorNoOfM).Title("no. Months").Width("100");
                                columns.Bound(p => p.VPoorNoOfB).Title("Beneficiaries").Width("100");
                                columns.Bound(p => p.PoorNoOfM).Title("no. Months").Width("100");
                                columns.Bound(p => p.PoorNoOfB).Title("Beneficiaries").Width("100");
                                columns.Bound(p => p.MiddleNoOfM).Title("no. Months").Width("100");
                                columns.Bound(p => p.MiddleNoOfB).Title("Beneficiaries").Width("100");
                                columns.Bound(p => p.BOffNoOfM).Title("no. Months").Width("100");
                                columns.Bound(p => p.BOffNoOfB).Title("Beneficiaries").Width("100");
                                columns.Command(commands =>
                                {
                                    commands.Edit();
                                    commands.Destroy();
                                }).Title("Commands").Width("200");

                            })
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Sortable()
      .DataSource(datasource=>datasource.Ajax()
      .Model(model => model.Id(p => p.NAId))
      .Read(read => read.Action("Read", "NeedAssessment"))
      .Update(update=>update.Action("Edit","NeedAssessment"))
      .Create(create=>create.Action("Create","NeedAssessment"))
      .Destroy(destroy=>destroy.Action("Delete","NeedAssessment"))
      )
      .ToolBar((toolbar=>toolbar.Create()))
     
        
      
      )
  
